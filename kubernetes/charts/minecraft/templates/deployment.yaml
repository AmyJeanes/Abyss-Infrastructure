apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: minecraft
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.debug }}
          command:
            - "/bin/sh"
            - "-c"
            - "echo 'Container in debug mode, doing nothing'; sleep infinity"
          {{- end }}
          env:
            - name: EULA
              value: "TRUE"
            - name: USE_AIKAR_FLAGS
              value: "true"
            - name: TZ
              value: {{ .Values.timezone | quote }}
            - name: MEMORY
              value: {{ .Values.memory | quote }}
            - name: VERSION
              value: {{ .Values.version | quote }}
            - name: TYPE
              value: {{ .Values.type | quote }}
            {{- if .Values.modPlatform }}
            - name: MOD_PLATFORM
              value: {{ .Values.modPlatform | quote }}
            {{- end }}
            {{- if .Values.curseforge.enabled }}
            - name: CF_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: curseforge-api-key
            - name: CF_PAGE_URL
              value: {{ .Values.curseforge.pageUrl | quote }}
            - name: CF_OVERRIDES_EXCLUSIONS
              value: {{ .Values.curseforge.overrides.exclusions | quote }}
            - name: CURSEFORGE_FILES
              value: {{ join " " .Values.curseforge.extraMods | quote }}
            {{- end }}
            {{- if .Values.spiget.enabled }}
            - name: SPIGET_RESOURCES
              value: {{ join "," .Values.spiget.resources | quote }}
            {{- end }}
            - name: MOTD
              value: {{ .Values.serverProperties.motd | quote }}
            - name: DIFFICULTY
              value: {{ .Values.serverProperties.difficulty | quote }}
            - name: WHITELIST
              value: {{ .Values.serverProperties.whitelist | quote }}
            - name: OPS
              value: {{ .Values.serverProperties.ops | quote }}
            - name: SEED
              value: {{ .Values.serverProperties.seed | quote }}
            - name: ALLOW_FLIGHT
              value: {{ .Values.serverProperties.allowFlight | quote }}
            - name: VIEW_DISTANCE
              value: {{ .Values.serverProperties.viewDistance | quote }}
            - name: SIMULATION_DISTANCE
              value: {{ .Values.serverProperties.simulationDistance | quote }}
            - name: RCON_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: rcon-password
            - name: BROADCAST_RCON_TO_OPS
              value: {{ .Values.rcon.broadcastToOps | quote }}
          ports:
            - containerPort: 25565
              hostPort: {{ .Values.hostPort }}
              name: minecraft
              protocol: TCP
            - containerPort: 25575
              name: rcon
              protocol: TCP
            - containerPort: 8100
              name: map
              protocol: TCP
            - containerPort: 19565
              name: metrics
              protocol: TCP
          volumeMounts:
            - name: server
              mountPath: /data
            - name: world
              mountPath: /data/world
            - name: bluemap
              mountPath: /data/bluemap
            {{- if .Values.debug }}
            - name: das
              mountPath: /das
            {{- end }}
          {{- if and .Values.probes (not .Values.debug) }}
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 5
            tcpSocket:
              port: 25565
          startupProbe:
            failureThreshold: 26
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            tcpSocket:
              port: 25565
          {{- end }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
        - name: filebrowser
          image: {{ .Values.filebrowser.image.repository }}:{{ .Values.filebrowser.image.tag }}
          imagePullPolicy: {{ .Values.filebrowser.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: FB_BASEURL
              value: /filebrowser
            - name: FB_USERNAME
              value: {{ .Values.filebrowser.username | quote }}
            - name: FB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: filebrowser-password
          ports:
            - containerPort: 8080
              name: filebrowser
              protocol: TCP
          volumeMounts:
            - name: server
              mountPath: /data
            - name: world
              mountPath: /data/world
            - name: bluemap
              mountPath: /data/bluemap
          resources: {{ toYaml .Values.filebrowser.resources | nindent 12 }}
          {{- if and .Values.probes (not .Values.debug) }}
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 5
            tcpSocket:
              port: 8080
          {{- end }}
      {{- if .Values.debug }}
      terminationGracePeriodSeconds: 1
      {{- else }}
      terminationGracePeriodSeconds: 120
      {{- end }}
      volumes:
        - name: server
          persistentVolumeClaim:
            claimName: {{ .Values.volumeClaims.server }}
        - name: world
          persistentVolumeClaim:
            claimName: {{ .Values.volumeClaims.world }}
        - name: bluemap
          persistentVolumeClaim:
            claimName: {{ .Values.volumeClaims.bluemap }}
        {{- if .Values.debug }}
        - name: das
          hostPath:
            path: /mnt/das
            type: Directory
        {{- end }}
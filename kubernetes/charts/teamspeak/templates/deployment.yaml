apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: teamspeak
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 9987
            runAsGroup: 9987
          env:
            - name: TSSERVER_QUERY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: serveradmin-password
            - name: TSSERVER_DATABASE_PLUGIN
              value: sqlite3
            - name: TSSERVER_DATABASE_SQL_CREATE_PATH
              value: create_sqlite
            - name: TSSERVER_LICENSE_ACCEPTED
              value: accept
            - name: TSSERVER_QUERY_SSH_ENABLED
              value: "1"
            - name: TSSERVER_QUERY_HTTP_ENABLED
              value: "1"
            - name: TSSERVER_FILE_TRANSFER_PORT
              value: {{ required "ports.filetransfer is required" .Values.ports.filetransfer | quote }}
            - name: TSSERVER_QUERY_SSH_PORT
              value: {{ required "ports.serverquery is required" .Values.ports.serverquery.ssh | quote }}
            - name: TSSERVER_QUERY_HTTP_PORT
              value: {{ required "ports.serverquery is required" .Values.ports.serverquery.http | quote }}
            - name: TSSERVER_DEFAULT_PORT
              value: {{ required "ports.voice is required" .Values.ports.voice | quote }}
          ports:
            - name: filetransfer
              containerPort: {{ .Values.ports.filetransfer }}
              hostPort: {{ .Values.ports.filetransfer }}
              protocol: TCP
            - name: query-ssh
              containerPort: {{ .Values.ports.serverquery.ssh }}
              hostPort: {{ .Values.ports.serverquery.ssh }}
              protocol: TCP
            - name: query-http
              containerPort: {{ .Values.ports.serverquery.http }}
              hostPort: {{ .Values.ports.serverquery.http }}
              protocol: TCP
            - name: voice
              containerPort: {{ .Values.ports.voice }}
              hostPort: {{ .Values.ports.voice }}
              protocol: UDP
          volumeMounts:
            - name: data
              mountPath: /var/tsserver/
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.ports.serverquery.ssh }}
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.ports.serverquery.ssh }}
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: {{ .Values.ports.serverquery.ssh }}
            timeoutSeconds: 1
          resources: {{ toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      nodeSelector:
        kubernetes.io/arch: amd64